#!/usr/bin/env python3
# Facing generator
# Copyright 2017 - Michael T. Mayers
# Licensed under the GPLV3 - see https://www.gnu.org/licenses/gpl-3.0.html

import os,sys, string, math

from PyQt5.QtCore import QSize, Qt
from PyQt5.QtWidgets import QApplication, QGridLayout, QLabel, QWidget, QLineEdit, QTextEdit, QPushButton, QFileDialog
from PyQt5.QtGui import (QPalette, QPixmap)

#############################################################################

def frange(start, stop, step):
    i = 0
    while start + i * step <= stop:
        yield start + i * step
        i += 1

#############################################################################

class FacerWindow(QWidget):

    ###################################

    def __init__(self):
        super(FacerWindow, self).__init__()
        mainLayout = QGridLayout()
        #####################
        self.x1 = 1.0
        self.x2 = 2.0
        self.y1 = 1.0
        self.y2 = 2.0
        self.docZ = 0.1
        self.docXY = 0.1
        self.feedRate = 0.1
        self.toolDiam = 0.1
        #####################
        def makeNumEdit(var,label,row):
            numlabl = QLabel(label)
            numedit = QLineEdit( )
            numedit.setMaxLength(10)
            numedit.setText("%g"%getattr(self,var))
            def numeditchanged(text):
                try:
                    setattr(self,var,float(text))
                    print( "%s<%f>"% (label,var) )
                except:
                    None
            numedit.textChanged.connect(numeditchanged)
            mainLayout.addWidget(numlabl, row, 0)
            mainLayout.addWidget(numedit, row, 1, 1, 1)
        #####################
        makeNumEdit("x1","x1",0)
        makeNumEdit("x2","x2",1)
        makeNumEdit("y1","y1",2)
        makeNumEdit("y2","y2",3)
        makeNumEdit("docZ","Axial(Z) DOC (in)",4)
        makeNumEdit("docXY","Radial(XY) DOC (in)",5)
        makeNumEdit("feedRate","Feed Rate (in/sec)",6)
        makeNumEdit("toolDiam","Tool Diam (in)",7)
        #####################
        self.outedit = QTextEdit( )
        self.outedit.setStyleSheet("background-color: rgb(96, 32, 96); color: rgb(255,255,0); ")
        mainLayout.addWidget(self.outedit, 0, 2, 7, 1)

        outgen = QPushButton("Generate GCode" )
        outgen.setStyleSheet("background-color: rgb(192, 184, 192); border-radius: 1; ")
        mainLayout.addWidget(outgen, 7, 2, 1, 1)
        outgen.pressed.connect(self.generate)

        outwri = QPushButton("Write GCode" )
        outwri.setStyleSheet("background-color: rgb(208, 176, 208); border-radius: 2; ")
        mainLayout.addWidget(outwri, 8, 2, 1, 1)
        outwri.pressed.connect(self.write)

        #####################
        self.setLayout(mainLayout)
        self.setWindowTitle("Facing GCode Generator \N{COPYRIGHT SIGN} 2017 - TweakoZ")

    ###################################

    def generate(self):
        self.gcode = "(Generated by facing generator, yo..)\n"
        #print("x1<%f> x2<%f> y1<%f> y2<%f>"%(self.x1,self.x2,self.y1,self.y2))
        done = False
        xa = self.x1
        xb = self.x2
        self.gcode += "G00 X%g Y%g (move to start)\n" % (xa, self.y1) 
        xa, xb = xb, xa
        for y in frange(self.y1,self.y2,self.docXY):
            self.gcode += "G01 X%g Y%g F%g (sweep)\n" % (xa,y,self.feedRate)
            self.gcode += "G00 Y%g (move to next)\n" % (y+self.docXY)
            xa, xb = xb, xa
        self.gcode += "M2\n"
        self.outedit.setText(self.gcode)

    def write(self):
        options = QFileDialog.Options()
        options |= QFileDialog.DontUseNativeDialog
        savename = QFileDialog.getSaveFileName(self,"QFileDialog.getSaveFileName()","","GCode Files (*.ngc)", options=options )
        print(savename)
        f = open(savename[0], 'wb')
        f.write(self.gcode.encode('utf-8'))
        f.close()

#############################################################################

if __name__ == '__main__':
    app = QApplication(sys.argv)
    win = FacerWindow()
    win.setStyleSheet("background: rgb(160,160,174)")
    win.show()
    sys.exit(app.exec_())
